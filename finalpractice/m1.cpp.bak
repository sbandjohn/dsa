#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>

using namespace std;

const int maxn = 20010;
const int maxm = 100100;

int lnk[maxn];


int find(int x){
	int y, k;
	for (y=x; lnk[y]!=y; y=lnk[y]) ;
	for (k=x; k!=y; x=lnk[k], lnk[k]=y, k=x) ;
	return y;
}

int join(int x, int y){
	int a = find(x), b = find(y);
	if (a == b) return 0;
	lnk[a] = b;
	return 1;
}

class Edge{
public:
	int x, y, z;
	bool operator < (const Edge &p) const{
		return z < p.z;
	}
}edge[maxm];

int main(){
	int n,m;
	scanf("%d%d",&n, &m);
	
	for (int i=1; i<=2*n; ++i) lnk[i] = i;
	
	for (int i=1; i<=m; ++i){
		scanf("%d%d%d", &edge[i].x, &edge[i].y, &edge[i].z);
	}
	sort(edge+1, edge+1+m);
	
	for (int i=m; i>=1; --i){
		int x = edge[i].x, y = edge[i].y, z=edge[i].z;
		int a = find(x), b = find(y);
		if (a == b){
			printf("%d\n", z);
			return 0;
		}
		cout<<x<<','<<y<<"  "<<a<<','<<b<<endl;
		join(x, y+n);
		join(x+n, y);
	}
	printf("0\n");
	return 0;
}